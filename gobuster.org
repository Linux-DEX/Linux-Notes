#+TITLE: GOBUSTER NOTE
#+DESCRIPTION: gobuster commands
#+AUTHOR: Linux-DEX
#+OPTIONS: toc:4

* TABLE OF CONTENT :toc:
- [[#introduction][Introduction]]
  - [[#basic-syntax][Basic Syntax]]
  - [[#commands][Commands]]
  - [[#options][Options]]
  - [[#other-options][Other Options]]
- [[#example-commands][Example Commands]]

* Introduction
*gobuster* is a command-line tool used for directory and file brute-forcing on web servers. It's commonly used in penetration testing or when trying to discover hidden file or directories on a web server. 

** Basic Syntax
#+begin_example
$ gobuster [options] -u <URL> -w <wordlist>
#+end_example

** Commands

+ *dir* : Perform directory brute-forcing.
+ *dns* : Perform DNS subdomain brute-forcing.
+ *vhost* : Perform virtual host brute-forcing.
+ *crlf* : Check for CRLF injection vulnerabilities.
+ *file* : Brute-force file names on web servers.

** Options

+ *-u, --url* : Specify the target URL to scan.
+ *-w, --wordlist* : Specify the path to the wordlist file containing potential directory and file names.
+ *-t, --threads* : Set the number of concurrent threads (default is 10).
+ *-k, --insecure* : Allow connections to SSL sites without certificates.
+ *-l, --delay* : Delay between requests in milliseconds (default is 0).
+ *-a, --useragent* : Set the User-agent header for requests.
+ *-e, --expanded* : Expand the results to include full URLs.
+ *-x, --extensions* : Specify file extensions to search for.
+ *-s, --statuscodes* : Only show status codes in the output.
+ *-c, --cookies* : Specify cookies to use in requests.
+ *-H, --headers* : Specify custom headers in requests.
+ *-q, --quiet* : Don't print the banner and other noise.
+ *-o, --output* : Specify an output file to save the results.

** Other Options 

+ *--timeout* : Set the request timeout in seconds (default is 10).
+ *--proxy* : Use a proxy server for requests (format: http://host:port).
+ *--no-tlscheck* : Disable TLS certificate verification.
+ *--random-agent* : Use a random User-Agent for requests.
+ *--http-proxy* : Use an HTTP proxy server for requests.
+ *--follow-redirect* : Follow HTTP redirects.

* Example Commands

1. Help for directory/file enumeration mode.
#+begin_example
$ gobuster dir --help
#+end_example

2. Help for DNS subdomain enumeration mode.
#+begin_example
$ gobuster dns --help
#+end_example

3. Basic directory brute-forcing.
#+begin_example
$ gobuster dir -u http://example.com -w /path/to/wordlist.txt
#+end_example

NOTE: the example for the path 
#+begin_example
/usr/share/wordlists/dirbuster/directory-list.txt

/usr/share/wordlist/dirbuster-ng/wordlists/small.txt
#+end_example

3. Directory brute-forcing with expanded results.
#+begin_example
$ gobuster dir -u http://example.com -w /path/to/wordlist.txt -e
#+end_example

4. Brute-forcing directories and files with specific extensions.
#+begin_example
$ gobuster dir -u http://example.com -w /path/to/wordlist.txt -x php,txt
#+end_example

5. Using multiple threads for faster scanning.
#+begin_example
$ gobuster dir -u http://example.com -w /path/to/wordlist.txt -t 20
#+end_example

6. Saving the results to a file.
#+begin_example
$ gobuster dir -u http://example.com -w /path/to/wordlist.txt -o results.txt
#+end_example

7. Brute-forcing a specific file.
#+begin_example
$ gobuster file -u http://example.com/index.html -w /path/to/wordlist.txt
#+end_example

8. DNS subdomain brute-forcing 
#+begin_example
$ gobuster dns -d example.com -w /path/to/subdomains.txt
#+end_example

9. DNS subdomain brute-forcing with 20 concurrent threads, save the results to the file
#+begin_example
$ gobuster dns -d example.com -w /path/to/subdomains.txt -t 20 -o subdomains.txt
#+end_example

